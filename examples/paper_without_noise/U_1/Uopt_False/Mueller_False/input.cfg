[rnd]
seed=983475

[system]
#type of system
type=hubbard_chain
#hopping parameter
t=-1.0
#interaction parameter
U=1
#chemical potential, mU2=-0.5*U for half filling of Hubbard chain
mu=mU2
#number of sites
L=8
#interaction is on first Lint sites, if Lint==-1: Lint=L
Lint=-1
#method type to obtain ground state
mode=DMRG 

[LocalApprox]
#Llocal sites are combined as an impurity in the local approximation
Llocal=1
#which impurity to work on
ilocal=0 

[ACA]
#level of the ACA, -1 means maximal level
level=1

[CI] #density matrix functional over complete representation (FCI,ED)
tdoci=True
#tolerance for constrained minimization
tol=1e-5 
#maximal number of iterations for constrained minimization
maxiter=10000 
#do constrained minimization over complex amplitudes
tcplx=True 
#compute the derivative of the rdmf with respect to the density matrix
tder=False

[QC]
#hub: ibm-q or ibm-q-research-2
hub=ibm-q-research-2
#group: open or paderborn-uni-1
group=paderborn-uni-1

#quantum computer (tsim=True: used for noise model and coupling map, tsim=False: used to execute quantum prorgams)
#qc=ibmq_casablanca
#qc=ibmq_belem
#qc=fake_belem
qc=fake_bogota

#number of qubits, "qc" means to get it fro the backend
nq=qc
#nq=5

tdoqc=True
#simulate quantum programs
tsim=True
#simulate constrained minimization with quantum programs and explicit constraints
tsimcons=False
#simulate with or without nsampling
tsampling=True
#simulate with or without noise
tnoise=True
tcheck=True

#measure the standard deviation of measurements
tstddev=True
#how many instances to be used for stddev
stddev_count=4

#minimization algorithms for noisy unconstrained minimization
#algo=LBFGS
algo=COBYLA
#algo=cal-SPSA
#algo=SPSA
#algo=QNSPSA

algo_maxiter=1000
algo_tol=0.0001

auglag_iter_max=20
initial_penalty=20
penalty_exponent=2
penalty_factor=1.5

#min_without_noise=False
min_without_noise=True

#build sparse matrix representations of operators for checking of expectation values
build_sparse=True

#number of measurements
shots=8192
#fermionic mapping (JordanWigner, Parity, BravyiKitaev
#mapping=JordanWigner
mapping=BravyiKitaev
#mapping=Parity

#allow two-qubit-reductions in fermionic transformation, WARNING: this requires a block-spin ordering of one-particle states
two_qubit_reduction=False

#which commutation level to use: none, disjointqubits, qubitwise, commute, (anticommute)
#commutation_1rdm=none
#commutation_1rdm=none_bitstring
#commutation_1rdm=disjointqubits
#commutation_1rdm=disjointqubits_bitstring
#commutation_1rdm=qubitwise
commutation_1rdm=qubitwise_bitstring
#commutation_1rdm=commute

#commutation_W=none
#commutation_W=none_bitstring
#commutation_W=disjointqubits
#commutation_W=qubitwise
commutation_W=qubitwise_bitstring
#commutation_W=commute

end_after_cliques=False

#try reorderings of measurement qubits to reduce complexity of the meaurement circuits
reorder_measurement_qubits=True
#heristically restrict reorderings of measurement qubits
reorder_measurement_qubits_restricted=True
#try all variants of initial Hs in measurement construction to reduce complexity of the meaurement circuits 
try_all_initial_H_combinations=False
#fix the order of measurement qubits so that the LUP decomposition doesn't produce any swaps
fixed_order_measurement_qubits=True

#test resulting measurement circuits against exact result
test_construction_of_measurement_circuits=True

#print output during construction of meansurement circuits
print_construction_of_measurement_circuits=False
#print final measurement circuits
print_measurement_circuits=True

#settings for transpiler that is used to optimize measurement circuits, it is overwritten by the coupling map of the device if tnoise=True
transpiler_gates=cx,u3
transpiler_couplings=0_1,1_0,1_2,2_1,2_3,3_2
transpiler_seed=345876
gate_weights=cx_1,swap_1,h_1,s_1,y_1,measure_0,u3_1,barrier_0,cz_1,sdg_1
#transpiled or constructed
criterion_for_qc_optimality=transpiled
#depth or gate_weights 
complexity_measure=depth


#entangler structure in hardware-efficient trial states: linear, full,..., map means to use the entanglement_map, qc means to use the coupling map of the quantum computer
entanglement=qc
#entanglement=map
#map in terms of physical qubits
entanglement_map=0_1,1_2,1_3

#ansatztype
#ansatztype=twolocal
ansatztype=hardwarefficient0
#ansatztype=hardwarefficient_u3
#ansatztype=2103.16161_spin_model

#number of blocks in the hardware-efficient trial states
reps=1
#entangler gate in hardware-efficient trial states
entanglement_blocks=cx
#rotation gates in hardware-efficient trial states
rotation_blocks=rz

spsa_blocking=False
#hdf5 debug output
hdf5_out=False

#no lagrange multipliers for elements of the 1rdm that include opposite spin directions
no_multipliers_for_up_down=False

#mapping of model qubits to physical qubits of qc, this is done via a reordering of the Pauli strings after the fermionic transformation
#qubit_map=none
#qubit_map=2,0,1,3,4
qubit_map=1,2,0,3,4
#qubit_map=0,1,2,3,4


mitigate_extreme_offdiagonal_1rdm_values=False
auto_opt_bath_U=False

initial_lagrange_from_mueller=False

ignore_W=False

max_parallel_threads=0
max_parallel_experiments=0
max_parallel_shots=1
